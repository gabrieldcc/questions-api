const Question = require('../../models/Question');

// Controller para criar uma questão
const createQuestion = async (req, res) => {
  try {
    console.log('Request Body:', req.body); // Verifique o que está sendo enviado
    const question = new Question(req.body);
    await question.save();
    res.status(201).send(question);
  } catch (err) {
    console.error('Error:', err); // Exiba o erro no console
    res.status(400).send(err);
  }
};

// Controller para obter todas as questões
const getAllQuestions = async (req, res) => {
  try {
    const questions = await Question.find();
    res.status(200).send(questions);
  } catch (err) {
    res.status(500).send(err);
  }
};

// Controller para obter uma questão por ID
const getQuestionById = async (req, res) => {
  try {
    const question = await Question.findById(req.params.id);
    if (!question) {
      return res.status(404).send('Questão não encontrada');
    }
    res.status(200).send(question);
  } catch (err) {
    res.status(500).send(err);
  }
};

// Controller para atualizar uma questão
const updateQuestion = async (req, res) => {
  try {
    const question = await Question.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!question) {
      return res.status(404).send('Questão não encontrada');
    }
    res.status(200).send(question);
  } catch (err) {
    res.status(400).send(err);
  }
};

// Controller para deletar uma questão
const deleteQuestion = async (req, res) => {
  try {
    const question = await Question.findByIdAndDelete(req.params.id);
    if (!question) {
      return res.status(404).send('Questão não encontrada');
    }
    res.status(200).send('Questão deletada com sucesso');
  } catch (err) {
    res.status(500).send(err);
  }
};

module.exports = {
  createQuestion,
  getAllQuestions,
  getQuestionById,
  updateQuestion,
  deleteQuestion
};
